<?php
/*
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace EasyBimehLandingLib\Tests;

use EasyBimehLandingLib\APIException;
use EasyBimehLandingLib\Exceptions;
use EasyBimehLandingLib\APIHelper;
use EasyBimehLandingLib\Models;

class FooterControllerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \EasyBimehLandingLib\Controllers\FooterController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new \EasyBimehLandingLib\EasyBimehLandingClient();
        self::$controller = $client->getFooter();
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * TODO: Add Description
     */
    public function testPortalLandingContactAbout()
    {
        // Parameters for the API call
        $xApiKey = 'd6dfd932-75d8-e911-811a-000c294ecf01';

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            $result = self::$controller->getPortalLandingContactAbout($xApiKey);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );

        // Test headers
        $headers = [];
        $headers['Date'] = null ;
        $headers['Content-Type'] = null ;
        $headers['Content-Length'] = null ;
        $headers['Connection'] = null ;
        $headers['Keep-Alive'] = null ;
        $headers['Cache-Control'] = null ;
        $headers['Pragma'] = null ;
        $headers['Content-Encoding'] = null ;
        $headers['Expires'] = null ;
        $headers['X-StackifyID'] = null ;
        $headers['X-AspNet-Version'] = null ;
        $headers['X-Powered-By'] = null ;
        $headers['Server'] = null ;
        $headers['AR-PoweredBy'] = null ;
        $headers['ar-sid'] = null ;
        $headers['AR-ATIME'] = null ;
        $headers['AR-CACHE'] = null ;
        $headers['AR-Request-ID'] = null ;
        
        $this->assertTrue(
            TestHelper::areHeadersProperSubsetOf($headers, $this->httpResponse->getResponse()->getHeaders(), true),
            "Headers do not match"
        );

        // Test whether the captured response is as we expected
        $this->assertNotNull($result, "Result does not exist");

        $this->assertTrue(
            TestHelper::isJsonObjectProperSubsetOf(
                "{\r\n  \"isSuccess\": true,\r\n  \"status\": 200,\r\n  \"message\": {\r\n    \"licensed\": false,\r" .
                "\n    \"insuranceGroup\": [],\r\n    \"insuranceType\": [],\r\n    \"summaryCards\": [],\r\n    \"su" .
                "mmaryNotics\": [],\r\n    \"imageAlbums\": [],\r\n    \"videoGalleries\": [],\r\n    \"insuranceCent" .
                "re\": {\r\n      \"id\": 2,\r\n      \"personId\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n    " .
                "  \"personalityType\": 0,\r\n      \"insuranceCentreType\": 5,\r\n      \"registerStatus\": 99,\r\n " .
                "     \"centerName\": \"میز کار  مجازی  بیمه \",\r\n      \"centerCode\": \"1020\",\r\n      \"branch" .
                "Count\": null,\r\n      \"registrationNumber\": \"4121\",\r\n      \"freeUseGoldenPackExpireDate\": " .
                "\"2019-06-17T12:46:51.763\",\r\n      \"cityId\": 329,\r\n      \"cashPayment\": true,\r\n      \"sh" .
                "owInEasyBimeh\": true,\r\n      \"installmentsPayment\": false,\r\n      \"isInitialApplicant\": fal" .
                "se,\r\n      \"branchsCount\": 9,\r\n      \"employeesCount\": 20,\r\n      \"zoneId\": null,\r\n   " .
                "   \"smsChargingStock\": null,\r\n      \"independentBranch\": null,\r\n      \"disableReason\": nul" .
                "l,\r\n      \"termsConditions\": null,\r\n      \"disableReasonDescription\": null,\r\n      \"unlim" .
                "itedAccount\": null,\r\n      \"whiteLabel\": false,\r\n      \"phone\": \"02188207290\",\r\n      " .
                "\"fax\": \"\",\r\n      \"address\": \"استان تهران، تهران، خیابان گاندی، خیابان پانزدهم، شماره15، وا" .
                "حد 1\",\r\n      \"zipCode\": \"\",\r\n      \"email\": \"hfz1.co@gmail.com\",\r\n      \"paymentUrl" .
                "\": null,\r\n      \"callbackUrl\": null,\r\n      \"callbackUrlWhitelabel\": null,\r\n      \"webSi" .
                "te\": \"\",\r\n      \"latitude\": 35.6892,\r\n      \"longitude\": 51.389,\r\n      \"isActive\": t" .
                "rue,\r\n      \"insuranceCentreId\": null,\r\n      \"cityRegionId\": null,\r\n      \"provinceId\":" .
                " 8,\r\n      \"cityName\": \"تهران\",\r\n      \"metaMediaActivityLicenceId\": 20453,\r\n      \"met" .
                "aMediaActivityLicenceUrl\": null,\r\n      \"createOnPersianDate\": \"1397/05/05 00:00\",\r\n      " .
                "\"insuranceCompanyId\": [\r\n        31,\r\n        32,\r\n        33,\r\n        34,\r\n        35," .
                "\r\n        36,\r\n        37,\r\n        39\r\n      ],\r\n      \"activePackageId\": 9,\r\n      " .
                "\"packageActivationLastDate\": \"2019-08-31T14:49:47.55\",\r\n      \"licenseApiKey\": null,\r\n    " .
                "  \"verifyRequestUrl\": null,\r\n      \"onlinePayment\": true,\r\n      \"cardToCardPayment\": true" .
                ",\r\n      \"bankTransferPayment\": true,\r\n      \"cashOnDelivery\": true,\r\n      \"bankTransfer" .
                "SameOnlinePaymentInfo\": false,\r\n      \"bankParamId\": 109,\r\n      \"accountOwner\": \"فرزاد\"," .
                "\r\n      \"accountNumber\": \"1761496408\",\r\n      \"iban\": \"550120000000001761496408\",\r\n   " .
                "   \"cardBankParamId\": 109,\r\n      \"cardAccountOwner\": \"فرزاد\",\r\n      \"cardAccountNumber" .
                "\": \"6104333344445555\",\r\n      \"bankTransferParamId\": 109,\r\n      \"bankTransferAccountOwner" .
                "\": \"فرزاد\",\r\n      \"bankTransferAccountNumber\": \"1761496408\",\r\n      \"bankTransferIBAN\"" .
                ": \"550120000000001761496408\"\r\n    },\r\n    \"insuranceCentrePortal\": {\r\n      \"insuranceCen" .
                "treId\": 2,\r\n      \"centreName\": \"میز کار  مجازی  بیمه \",\r\n      \"subDomainName\": \"hfz1\"" .
                ",\r\n      \"title\": \"\",\r\n      \"subTitle\": \"\",\r\n      \"contactUs\": null,\r\n      \"ab" .
                "outUs\": \"\",\r\n      \"ourService\": \"<div itemprop=\\\"mainContentOfPage\\\"><p>تمامی بیمه نامه" .
                " ها با اعمال حداکثر تخفیفات قانونی ویژه ، با تسهیل در پرداخت حق بیمه (بصورت قسطی) توسط هریک از شرکته" .
                "ای بیمه مورد نظر شما صادر خواهد گردید.</p></div>\",\r\n      \"termsConditions\": null,\r\n      \"c" .
                "opyright\": null,\r\n      \"headerTitle\": null,\r\n      \"headerBody\": null,\r\n      \"footerCo" .
                "lor\": null,\r\n      \"backgroundColor\": null,\r\n      \"licensed\": false,\r\n      \"defaultLog" .
                "o\": null,\r\n      \"titleColor\": \"#ffffff\",\r\n      \"subTitleColor\": \"#ffffff\",\r\n      " .
                "\"eTrustSymbol\": null,\r\n      \"digitalMediaOrganizerSymbol\": null,\r\n      \"googlePlus\": \"h" .
                "ttp://instagram.com\",\r\n      \"telegram\": \"http://telegram.com\",\r\n      \"instagram\": \"htt" .
                "p://instagram.com\",\r\n      \"faceBook\": \"http://instagram.com\",\r\n      \"twitter\": \"http:/" .
                "/instagram.com\",\r\n      \"saturdayToWednesdayFromHour\": null,\r\n      \"saturdayToWednesdayToHo" .
                "ur\": null,\r\n      \"thursdayFromHour\": null,\r\n      \"thursdayToHour\": null,\r\n      \"frida" .
                "yFromHour\": null,\r\n      \"fridayToHour\": null,\r\n      \"metaMediaFileHeaderId\": 20817,\r\n  " .
                "    \"metaMediaFileHeaderUrl\": \"https://media.easybimeh.com//Easybimeh/FileManager/InsuranceCentre" .
                "/hfz1/636780551712391762.jpg\",\r\n      \"metaMediaFileLogoId\": 81580,\r\n      \"metaMediaFileLog" .
                "oUrl\": \"https://media.easybimeh.com//Easybimeh/FileManager/InsuranceCentre/hfz1/636994283394589289" .
                ".png\",\r\n      \"metaMediaFileFaviconId\": 162557,\r\n      \"metaMediaFileFaviconUrl\": \"https:/" .
                "/media.easybimeh.com//Easybimeh/FileManager/InsuranceCentre/hfz1/637082986134004537.jpeg\",\r\n     " .
                " \"metaMediaFileFooterId\": null,\r\n      \"metaMediaFileFooterUrl\": null\r\n    }\r\n  },\r\n  \"" .
                "extraData\": null,\r\n  \"exception\": null\r\n}",
                $this->httpResponse->getResponse()->getRawBody(),
                false,
                true,
                false
            ),
            "Response body does not match in keys"
        );
    }

    /**
     * TODO: Add Description
     */
    public function testFaqInsuranceCentre()
    {
        // Parameters for the API call
        $xApiKey = 'd6dfd932-75d8-e911-811a-000c294ecf01';

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            $result = self::$controller->getFaqInsuranceCentre($xApiKey);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );

        // Test headers
        $headers = [];
        $headers['Date'] = null ;
        $headers['Content-Type'] = null ;
        $headers['Content-Length'] = null ;
        $headers['Connection'] = null ;
        $headers['Keep-Alive'] = null ;
        $headers['Cache-Control'] = null ;
        $headers['Pragma'] = null ;
        $headers['Content-Encoding'] = null ;
        $headers['Expires'] = null ;
        $headers['X-StackifyID'] = null ;
        $headers['X-AspNet-Version'] = null ;
        $headers['X-Powered-By'] = null ;
        $headers['Server'] = null ;
        $headers['AR-PoweredBy'] = null ;
        $headers['ar-sid'] = null ;
        $headers['AR-ATIME'] = null ;
        $headers['AR-CACHE'] = null ;
        $headers['AR-Request-ID'] = null ;
        
        $this->assertTrue(
            TestHelper::areHeadersProperSubsetOf($headers, $this->httpResponse->getResponse()->getHeaders(), true),
            "Headers do not match"
        );

        // Test whether the captured response is as we expected
        $this->assertNotNull($result, "Result does not exist");

        $this->assertTrue(
            TestHelper::isJsonObjectProperSubsetOf(
                "{\r\n  \"isSuccess\": true,\r\n  \"status\": 200,\r\n  \"message\": [\r\n    {\r\n      \"id\": 1009" .
                ",\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"بیمه شخص ثالث چیست؟\",\r\n      \"answ" .
                "er\": \"بیمه شخص ثالث یکی از انواع بیمه خودرو است که خسارات جانی و مالی وارد شده به اشخاص زیان‌دیده " .
                "را پرداخت می‌کند. داشتن بیمه شخص ثالث برای تمامی وسایل نقلیه موتوری اجباری است.\",\r\n      \"sortPr" .
                "iority\": 0,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsura" .
                "nceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-06-17T00:" .
                "00:00\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-" .
                "409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n     " .
                " \"createOnPersianDate\": \"1397/03/27 00:00\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17" .
                "\"\r\n    },\r\n    {\r\n      \"id\": 1010,\r\n      \"insuranceCentreId\": 2,\r\n      \"question" .
                "\": \"آیا پس از تایید شماره همراه در مراحل ثبت نام، میتوانم شماره خود را تغییر دهم؟\",\r\n      \"an" .
                "swer\": \"شما زمانی میتوانید شماره خود را تغییر دهید که شماره ی همراه جدید نیز تایید شود. \\r\\n\\r" .
                "\\n در صورتی که  شماره همراه خود را به فردی دیگر واگذار کردید، جهت جلوگیری از سواستفاده یا مشکلات اح" .
                "تمالی، شماره موبایل خود را در پروفایل تغییر داده و شماره جدیدی ثبت نمایید.\",\r\n      \"sortPriorit" .
                "y\": null,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranc" .
                "eCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-06-19T10:34" .
                ":51.217\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-080" .
                "4-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/0" .
                "3/29 10:34\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n      \"i" .
                "d\": 1012,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"منظور از شخص ثالث در بیمه شخص" .
                " ثالث چیست؟\",\r\n      \"answer\": \"در بیمه شخص ثالث، شخص اول شخص بیمه‌گزار (کسی که برای وسیله نقل" .
                "یه‌ای بیمه شخص ثالث خریداری می‌کند)، شخص ثانی، بیمه‌گر یا شرکت بیمه و شخص ثالث فرد یا افرادی هستند د" .
                "ر حادثه رانندگی زیان دیده‌اند به جز راننده مقصر.\",\r\n      \"sortPriority\": null,\r\n      \"ques" .
                "tionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      " .
                "\"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-08-19T16:02:22.87\",\r\n      \"updat" .
                "eOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\"," .
                "\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/05/28 16:02\",\r\n      \"up" .
                "dateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n      \"id\": 1013,\r\n      \"insur" .
                "anceCentreId\": 2,\r\n      \"question\": \"نداشتن بیمه شخص ثالث، چه مشکلاتی برای من ایجاد می‌کند؟\"" .
                ",\r\n      \"answer\": \"اولاً حرکت وسیله نقلیه بدون داشتن بیمه شخص ثالث، ممنوع است و پلیس راهنمایی " .
                "رانندگی در هر زمانی که متوجه نداشتن بیمه شخص ثالث یک وسیله نقلیه شود، می‌تواند آن را توقیف کند. درصو" .
                "رتی‌که یک وسیله نقلیه دارای بیمه‌نامه شخص ثالث نباشد و دچار حادثه شود، راننده تا زمان پرداخت خسارت ج" .
                "انی و مالی اشخاص زیان‌دیده، زندانی می‌شود. همچنین، در هر زمان که راننده بخواهد بیمه شخص ثالث بخرد، ب" .
                "اید جریمه دیرکرد آن را که قابل بخشش نیست، بپردازد. از سوی دیگر، فروش وسیله نقلیه فاقد بیمه شخص ثالث،" .
                " امکان‌پذیر نیست.\",\r\n      \"sortPriority\": null,\r\n      \"questionGroupParamId\": 2,\r\n     " .
                " \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null" .
                ",\r\n      \"createOn\": \"2018-08-19T16:02:50.603\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.5" .
                "1\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null," .
                "\r\n      \"createOnPersianDate\": \"1397/05/28 16:02\",\r\n      \"updateOnPersianDate\": \"1398/01" .
                "/24 11:17\"\r\n    },\r\n    {\r\n      \"id\": 1014,\r\n      \"insuranceCentreId\": 2,\r\n      \"" .
                "question\": \"بیمه شخص ثالث برای من چه فایده‌ای دارد؟\",\r\n      \"answer\": \"علاوه بر آنکه خرید ب" .
                "یمه شخص ثالث برای تمامی دارندگان وسایل نقلیه موتوری الزامی است، داشتن این بیمه می‌تواند خسارات مالی " .
                "و جانی ناشی از بروز حادثه را که می‌تواند تا مرز صدها میلیون تومان باشد، جبران نماید.\",\r\n      \"s" .
                "ortPriority\": null,\r\n      \"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"t" .
                "heInsuranceCentre\": null,\r\n      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-0" .
                "8-19T16:03:30.28\",\r\n      \"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbd" .
                "dedc4-0804-409d-91ee-cb062ef33f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\":" .
                " \"1397/05/28 16:03\",\r\n      \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    },\r\n    {\r\n" .
                "      \"id\": 1015,\r\n      \"insuranceCentreId\": 2,\r\n      \"question\": \"نداشتن بیمه شخص ثالث" .
                "، چه مشکلاتی برای من ایجاد می‌کند؟\",\r\n      \"answer\": \"اولاً حرکت وسیله نقلیه بدون داشتن بیمه " .
                "شخص ثالث، ممنوع است و پلیس راهنمایی رانندگی در هر زمانی که متوجه نداشتن بیمه شخص ثالث یک وسیله نقلیه" .
                " شود، می‌تواند آن را توقیف کند. درصورتی‌که یک وسیله نقلیه دارای بیمه‌نامه شخص ثالث نباشد و دچار حادث" .
                "ه شود، راننده تا زمان پرداخت خسارت جانی و مالی اشخاص زیان‌دیده، زندانی می‌شود. همچنین، در هر زمان که" .
                " راننده بخواهد بیمه شخص ثالث بخرد، باید جریمه دیرکرد آن را که قابل بخشش نیست، بپردازد. از سوی دیگر، " .
                "فروش وسیله نقلیه فاقد بیمه شخص ثالث، امکان‌پذیر نیست.\",\r\n      \"sortPriority\": null,\r\n      " .
                "\"questionGroupParamId\": 2,\r\n      \"isActive\": true,\r\n      \"theInsuranceCentre\": null,\r\n" .
                "      \"theQuestionGroupParam\": null,\r\n      \"createOn\": \"2018-08-19T16:03:55.527\",\r\n      " .
                "\"updateOn\": \"2019-04-13T11:17:49.51\",\r\n      \"createdBy\": \"fbddedc4-0804-409d-91ee-cb062ef3" .
                "3f42\",\r\n      \"updatedBy\": null,\r\n      \"createOnPersianDate\": \"1397/05/28 16:03\",\r\n   " .
                "   \"updateOnPersianDate\": \"1398/01/24 11:17\"\r\n    }\r\n  ],\r\n  \"extraData\": null,\r\n  \"e" .
                "xception\": null\r\n}",
                $this->httpResponse->getResponse()->getRawBody(),
                false,
                true,
                false
            ),
            "Response body does not match in keys"
        );
    }

    /**
     * TODO: Add Description
     */
    public function testInsurancePolicyTracking()
    {
        // Parameters for the API call
        $trackingCode = 213981083;
        $nationalCode = 3080115309;
        $xApiKey = 'd6dfd932-75d8-e911-811a-000c294ecf01';

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            $result = self::$controller->getInsurancePolicyTracking($trackingCode, $nationalCode, $xApiKey);
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );

        // Test headers
        $headers = [];
        $headers['Date'] = null ;
        $headers['Content-Type'] = null ;
        $headers['Transfer-Encoding'] = null ;
        $headers['Connection'] = null ;
        $headers['Keep-Alive'] = null ;
        $headers['Vary'] = null ;
        $headers['Cache-Control'] = null ;
        $headers['Pragma'] = null ;
        $headers['Expires'] = null ;
        $headers['X-StackifyID'] = null ;
        $headers['X-AspNet-Version'] = null ;
        $headers['X-Powered-By'] = null ;
        $headers['Server'] = null ;
        $headers['AR-PoweredBy'] = null ;
        $headers['ar-sid'] = null ;
        $headers['AR-ATIME'] = null ;
        $headers['AR-CACHE'] = null ;
        $headers['AR-Request-ID'] = null ;
        $headers['Content-Encoding'] = null ;
        
        $this->assertTrue(
            TestHelper::areHeadersProperSubsetOf($headers, $this->httpResponse->getResponse()->getHeaders(), true),
            "Headers do not match"
        );

        // Test whether the captured response is as we expected
        $this->assertNotNull($result, "Result does not exist");

        $this->assertTrue(
            TestHelper::isJsonObjectProperSubsetOf(
                "{\r\n  \"isSuccess\": true,\r\n  \"status\": 200,\r\n  \"message\": {\r\n    \"id\": 1129,\r\n    \"" .
                "aliasName\": \"کاظم ملکی\",\r\n    \"status\": \"ثبت اولیه\",\r\n    \"createOnPersianDate\": \"1398" .
                "/04/12 13:00\",\r\n    \"centerName\": \"کارگزاری بیمه حافظان آرامش\",\r\n    \"insurancePolicyType" .
                "\": 8,\r\n    \"insuranceType\": \"بیمه درمان خانواده\",\r\n    \"price\": 1890060,\r\n    \"payment" .
                "ed\": null\r\n  },\r\n  \"extraData\": null,\r\n  \"exception\": null\r\n}",
                $this->httpResponse->getResponse()->getRawBody(),
                false,
                true,
                false
            ),
            "Response body does not match in keys"
        );
    }
}
